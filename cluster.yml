---

- name: Prepare cluster for compute
  hosts: all
  tasks:

    - name: Get cluster config
      ansible.builtin.command:
        cmd: scontrol show config
      changed_when: scontrol_show_config.rc != 0
      register: scontrol_show_config

    - name: Get cluster name
      ansible.builtin.set_fact:
        cluster_name: "{{ item | regex_search('ClusterName += +(.+)', '\\1') | first }}"
      loop: "{{ scontrol_show_config.stdout_lines }}"
      when: "'ClusterName' in item"

    - name: Get cluster name
      ansible.builtin.set_fact:
        scheduler_id: "{{ (cluster_name, 'scheduler') | join('-') }}"

    - name: "Install software on {{ scheduler_id }}"
      when: ansible_facts["hostname"] == scheduler_id
      block:

        - name: Set default Java for Nextflow
          ansible.builtin.include_role:
            name: set_default_java

        - name: Install Nextflow
          ansible.builtin.include_role:
            name: install_nextflow

        - name: Configure Nextflow
          ansible.builtin.include_role:
            name: configure_nextflow

        - name: Install softwares
          ansible.builtin.include_role:
            name: install_software

        - name: Add UK DRI users to docker group
          ansible.builtin.include_role:
            name: add_users_to_docker

        - name: Check Slurm Accounting is enabled
          ansible.builtin.command:
            cmd: sacct
          ignore_errors: true
          changed_when: is_sacct_enabled.rc != 0
          register: is_sacct_enabled
        
        - name: Configure Slurm Accounting
          when: is_sacct_enabled.rc == 1
          block:

          - name: Create new SlurmDB password
            ansible.builtin.set_fact:
              slurmdb_password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits']) }}"
            when: slurmdb_password is not defined

          - name: Configure SlurmDBD
            ansible.builtin.include_role:
              name: configure_slurmdb
            vars:
              configure_slurmdb_cluster_name: "{{ cluster_name }}"
              configure_slurmdb_password: "{{ slurmdb_password }}"

          - name: Configure MySQL
            ansible.builtin.include_role:
              name: configure_mysql
            vars:
              configure_mysql_slurm_password: "{{ slurmdb_password }}"

          - name: Restart Slurm Daemons
            ansible.builtin.include_role:
              name: restart_slurm

        - name: Configure and get shared data files
          ansible.builtin.include_role:
            name: configure_shared_data