---

- name: Temporary directory for gProfiler data
  ansible.builtin.tempfile:
    state: directory
  register: retrieve_genome_data_gprofiler_temp_dir

- name: Get gProfiler data versions file
  ansible.builtin.get_url:
    url: "{{ retrieve_genome_data_gprofiler_root }}/api/util/data_versions?organism={{ retrieve_genome_data_gprofiler_species_name }}"
    dest: "{{ retrieve_genome_data_gprofiler_temp_dir.path }}/gprofiler_databases_versions.json"
    mode: '600'

- name: Get gProfiler data versions
  ansible.builtin.include_vars:
    file: "{{ retrieve_genome_data_gprofiler_temp_dir.path }}/gprofiler_databases_versions.json"
    name: retrieve_genome_data_gprofiler_versions

- name: Set Ensembl releases
  ansible.builtin.set_fact:
    ensembl_releases: "{{ [retrieve_genome_data_gprofiler_versions.biomart_version | int, retrieve_genome_data_ensembl_releases] | flatten | unique | list }}"

- name: Create assembly version directory
  ansible.builtin.file:
    name: "{{ retrieve_genome_data_root_path }}/{{ retrieve_genome_data_genome_version }}"
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '775'
  become: true

- name: Get genome file
  ansible.builtin.include_role:
    name: 'fetch_ensembl_data'
  vars:
    fetch_ensembl_data_release: 'current'
    fetch_ensembl_data_species_name: "{{ retrieve_genome_data_species_name | lower }}"
    fetch_ensembl_data_datatype: 'dna'
    fetch_ensembl_data_filename: "{{ retrieve_genome_data_species_name }}.{{ retrieve_genome_data_genome_version }}.dna.primary_assembly.fa.gz"
    fetch_ensembl_data_destdir: "{{ retrieve_genome_data_root_path }}/{{ retrieve_genome_data_genome_version }}"

- name: Release specific data
  ansible.builtin.include_role:
    name: retrieve_annotation_data
  vars:
    retrieve_annotation_data_ensembl_species_name: "{{ retrieve_genome_data_species_name }}"
    retrieve_annotation_data_ensembl_genome_name: "{{ retrieve_genome_data_genome_version }}"
    retrieve_annotation_data_ensembl_release_version: "{{ ensembl_release }}"
    retrieve_annotation_data_species_release_data_path: "{{ retrieve_genome_data_root_path }}/{{ retrieve_genome_data_genome_version }}/{{ ensembl_release }}"
  loop: "{{ ensembl_releases }}"
  loop_control:
    loop_var: ensembl_release

# This needs to happen after the download of the Ensembl files to have the release directory present
- name: Get the gProfiler files
  when: (retrieve_genome_data_root_path, retrieve_genome_data_genome_version, retrieve_genome_data_gprofiler_versions.biomart_version) | path_join is not exists
  block:

    - name: Get gProfiler GMT file
      ansible.builtin.get_url:
        url: "{{ retrieve_genome_data_gprofiler_root }}/static/gprofiler_full_{{ retrieve_genome_data_gprofiler_species_name }}.ENSG.gmt"
        dest: "{{ retrieve_genome_data_gprofiler_temp_dir.path }}/gprofiler_full_{{ retrieve_genome_data_gprofiler_species_name }}.ENSG.gmt"
        mode: '600'

    - name: Copy gProfiler data to the release folder
      ansible.builtin.copy:
        src: "{{ retrieve_genome_data_gprofiler_temp_dir.path }}/"
        dest: "{{ retrieve_genome_data_root_path }}/{{ retrieve_genome_data_genome_version }}/{{ retrieve_genome_data_gprofiler_versions.biomart_version }}"
        owner: 'root'
        group: 'root'
        mode: '664'
      become: true

# - name: Warning about new release added
#   ansible.builtin.debug:
#     msg: >
#       WARNING: gProfiler uses Ensembl release {{ retrieve_genome_data_gprofiler_versions.biomart_version }} which is not in your list.
#       You must update the default variables file
#   when: (ensembl_releases | lentgh) != (configure_shared_data_ensembl_releases | length)
