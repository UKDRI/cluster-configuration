docker {
    enabled    = true
	runOptions = '-u $(id -u):$(id -g)'
    // the default is 20 minutes and fails with large images
    //pullTimeout = "3 hours"
}

process {
    resourceLimits = [
        cpus: 32,
        memory: 60.GB,
        time: 8.h
    ]
    // Default values for jobs
    queue = { task.memory > 7.GB ? "hpc" : ( task.cpus > 4 ? "hpc" : "htc" ) }
    cpus   = 1
    memory = { 2.GB   * task.attempt }
    time   = { 1.h    * task.attempt }
    // All analyses use scratch even if many may not need it. It may still limit
    // the load on the network
    scratch = "/mnt/scratch"
    maxRetries    = 3
	errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    // this is to avoid errors for missing files due to shared filesystem latency
    //cache         = "lenient"
    afterScript   = "sleep 30"
    // Many analyses are not optimised but configured so hopefully everything runs
    // Based on the precedence in the config, first is the label configuration,
    // then below are analysis within the label but where the requirements are
    // too different.
    withLabel: process_high {
        cpus   = 20
        memory = { 40.GB * task.attempt }
        time   = { 2.h  * task.attempt }
		scratch = "/mnt/scratch"
    }
    withName: RSEM_PREPAREREFERENCE {
        cpus   =  1
        memory = { 3.GB * task.attempt }
    }
    withName: TRIMGALORE {
        cpus   =  8
        memory = { 2.GB * task.attempt }
    }
    withName: DUPRADAR {
        cpus   =  8
        memory = { 2.GB * task.attempt }
    }

    withName: STAR_GENOMEGENERATE {
        cpus   = 20
        clusterOptions = { "-c " + (task.cpus / 2) }
        memory = { 40.GB * task.attempt }
        time   = { 1.h  * task.attempt }
    }

    withName: STAR_ALIGN {
        cpus   = 20
        clusterOptions = { "-c " + (task.cpus / 2) }
        memory = { 40.GB * task.attempt }
        time   = { 1.h  * task.attempt }
    }

    withLabel: process_low {
        cpus   =  1
        memory = { 1.GB * task.attempt }
        time   = { .5.h   * task.attempt }
    }
    withName: GTF2BED{
        memory = { 3.GB * task.attempt }
    }
    withLabel: process_medium {
        cpus   =  1
        memory = { 2.GB * task.attempt }
        time   = { 1.h   * task.attempt }
    }
    withName: QUALIMAP_RNASEQ {
        memory = { 8.GB * task.attempt }
    }
    withName: RSEQC_READDUPLICATION {
        memory = { 16.GB * task.attempt }
    }
    withName: RSEQC_INFEREXPERIMENT {
        cpus   =  2
    }
    withName: STRINGTIE_STRINGTIE {
        cpus   =  2
    }
    withName: DESEQ2_QC {
        cpus   =  2
    }
    withName: SAMTOOLS_SORT {
        cpus   =  2
        memory = { 6.GB * task.attempt }
    }
    withName: FASTQC {
        cpus   =  2
        memory = { 8.GB * task.attempt }
    }
    withName: PICARD_MARKDUPLICATES {
        cpus   =  2
        clusterOptions = { "-c " + (task.cpus / 2) }
        memory = { 32.GB * task.attempt }
    }
    withName: SUBREAD_FEATURECOUNTS {
        cpus   =  4
    }
    withName: SALMON_INDEX {
        cpus   =  4
        clusterOptions = { "-c " + (task.cpus / 2) }
        memory = { 22.GB * task.attempt }
    }
    withName: SALMON_QUANT {
        cpus   =  4
        clusterOptions = { "-c " + (task.cpus / 2) }
        memory = { 22.GB * task.attempt }
    }
    withLabel: process_single {
        cpus   =  1
        memory = { 1.GB * task.attempt }
        time   = { 1.h  * task.attempt }
    }
    withName: MULTIQC {
        memory = { 2.GB * task.attempt }
    }
    withName: SAMTOOLS_FLAGSTAT {
        memory = { 2.GB * task.attempt }
    }
    withName: SAMTOOLS_STATS {
        memory = { 2.GB * task.attempt }
    }
    withName: BEDTOOLS_GENOMECOV {
        memory = { 4.GB * task.attempt }
    }
}

executor {
    name            = "slurm"
    queueSize       = 500
    exitReadTimeout = "30 min"
}
